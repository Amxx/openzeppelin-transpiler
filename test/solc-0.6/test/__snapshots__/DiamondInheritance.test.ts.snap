// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Diamond contract is converted to a valid DCUpgradeable contract 1`] = `
"pragma solidity ^0.6.0;
import \\"../DiamondInheritance.sol\\";
import \\"./Initializable.sol\\";

contract DAUpgradeable is Initializable {
    event Log(string);
    uint256 public foo ;
    
    function __DA_init() internal initializer {
        __DA_init_unchained();
    }

    function __DA_init_unchained() internal initializer {
        
        foo = 42;
        
        emit Log(\\"DA\\");
    
    }

}

contract DB1Upgradeable is Initializable, DAUpgradeable {
    string public hello ;
    
    function __DB1_init() internal initializer {
        __DA_init_unchained();
        __DB1_init_unchained();
    }

    function __DB1_init_unchained() internal initializer {
        
        hello = \\"hello\\";
        
        emit Log(\\"DB1\\");
    
    }

}

contract DB2Upgradeable is Initializable, DAUpgradeable {
    bool public bar ;
    
    function __DB2_init() internal initializer {
        __DA_init_unchained();
        __DB2_init_unchained();
    }

    function __DB2_init_unchained() internal initializer {
        
        bar = true;
        
        emit Log(\\"DB2\\");
    
    }

}

contract DCUpgradeable is Initializable, DB2Upgradeable, DB1Upgradeable {
    address public owner ;
    
    function __DC_init() internal initializer {
        __DA_init_unchained();
        __DB2_init_unchained();
        __DB1_init_unchained();
        __DC_init_unchained();
    }

    function __DC_init_unchained() internal initializer {
        
        owner = address(0x123);
        
        emit Log(\\"DC\\");
    
    }

}
"
`;
